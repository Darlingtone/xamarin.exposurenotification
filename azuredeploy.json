{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "functionAppName": {
            "type": "string",
            "metadata": {
                "description": "Function App Nam. Must be globally unique."
            },            
            "minLength": 5,
            "maxLength": 24
        },
        "storageAccountName": { 
            "type": "string",
            "metadata": {
                "description": "Storage Account Name (lowercase). Must be globally unique"
            },         
            "minLength": 3,
            "maxLength": 17
        },
        "hostingPlanName": {
            "type": "string",
            "metadata": {
                "description": "Hosting Service Name. Globally unique."
            },            
            "minLength": 3,
            "maxLength": 24
        },
        "blobContainerPrefix": {
            "type":"string",
            "metadata": {
                "description": "the prefix that will be used in the naming of containers in Blob storage for each region your app/server supports. The default is 'region'"
            },
            "defaultValue":"region"
        },
        "supportedRegions": {
            "type": "string",
            "metadata": {
                "description": "Two character ISO 3166 country codes of regions the server supports. Semi-colon delimited."
            },
            "defaultValue": "us;ca"            
        },
        "sqlAdminLogin": {
            "type": "string",
            "metadata": {
                "description": "SQL admin username"
            },
            "defaultValue": "sqladmin"
        },
        "sqlAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "SQL admin password"
            }
        },
        "sqlDatabaseName": {
            "type": "string",
            "metadata": {
                "description": "SQL database name"
            },
            "defaultValue":"exposure-db"
        },
        "keyVaultName": {
            "type": "string",
            "metadata": {
                "description": "Specify the name of the key vault. Must be globally unique."
            }            
        },
        "isDebug": {
            "type": "bool",
            "metadata": {
                "description": "Is this deployment currently meant for debugging?"
            },
            "defaultValue": true
        }
    },
    "functions": [],
    "variables": {
        "appInsightsName": "functions-app-insights",
        "containerPrefix": "[concat(parameters('blobContainerPrefix'),'-')]",
        "sqlServerName": "[concat('sqlserver-', uniqueString(resourceGroup().id))]",
        "fullFunctionAppName": "[concat(parameters('functionAppName'),'-', uniqueString(resourceGroup().id))]",
        "fullHostingName": "[concat(parameters('hostingPlanName'), '-', uniqueString(resourceGroup().id))]",
        "fullStorageAccountName": "[toLower(concat(parameters('storageAccountName'), '-', uniqueString(resourceGroup().id)))]",
        "fullKeyVaultName": "[concat(parameters('keyVaultName'), '-', uniqueString(resourceGroup().id))]",
        "sqlDatabaseEdition": "Basic",
        "sqlDatabaseCollation": "SQL_Latin1_General_CP1_CI_AS",
        "sqlDatabaseObjectiveName": "Basic",
        "supportedRegionArray": "[split(parameters('supportedRegions'), ';')]",
        "configSkipKeyVaultName":"EN-SkipKeyVault",
        "configBlobStorageConnectionStringName":"EN-BlobStorageConnectionString",
        "configKeyVaultNameName":"EN-KeyVaultName",
        "configBlobStorageContainerPrefixName":"EN-BlobStorageContainerNamePrefix",
        "configDBConnectionStringName":"EN-DbConnectionString",
        "configDeleteDBAfterBatchName": "EN-DeleteKeysFromDbAfterBatching",
        "configDisableDeviceVerificationName": "EN-DisableDeviceVerification",
        "configSigningKeyName": "EN-SigningKey",
        "configSupportedRegionsNameName": "EN-SupportedRegions"
    },
    "resources": [
    {
        "name": "[variables('sqlServerName')]",
        "type": "Microsoft.Sql/servers",
        "apiVersion": "2019-06-01-preview",
        "location": "[resourceGroup().location]",
        "tags": {
            "displayName": "SqlServer"
        },
        "properties": {
            "administratorLogin": "[parameters('sqlAdminLogin')]",
            "administratorLoginPassword": "[parameters('sqlAdminPassword')]",
            "version": "12.0"
        },
        "resources": [
            {
                "type": "databases",
                "name": "[parameters('sqlDatabaseName')]",
                "apiVersion": "2019-06-01-preview",
                "location": "[resourceGroup().location]",
                "tags": {
                    "displayName": "Database"
                },
                "properties": {
                    "edition": "[variables('sqlDatabaseEdition')]",
                    "collation": "[variables('sqlDatabaseCollation')]",
                    "requestedServiceObjectiveName": "[variables('sqlDatabaseObjectiveName')]"
                },
                "dependsOn": [
                    "[variables('sqlServerName')]"
                ]                
            },
            {
                "name": "AllowAzureIPs",
                "type": "firewallRules",
                "apiVersion": "2015-05-01-preview",
                "location": "[resourceGroup().location]",
                "properties": {
                    "startIpAddress": "0.0.0.0",
                    "endIpAddress": "0.0.0.0"
                },
                "dependsOn": [
                    "[variables('sqlServerName')]"
                ]
            }
        ]
    },
    {  
        "type":"Microsoft.Web/serverfarms",
        "apiVersion":"2016-09-01",
        "name":"[variables('fullHostingName')]",
        "location":"[resourceGroup().location]",
        "properties":{  
            "name":"[variables('fullHostingName')]",
            "computeMode":"Dynamic"
        },
        "sku":{  
            "name":"Y1",
            "tier":"Dynamic",
            "size":"Y1",
            "family":"Y",
            "capacity":0
        }
    },
    {
        "name": "[variables('appInsightsName')]",
        "type": "Microsoft.Insights/components",
        "apiVersion": "2015-05-01",
        "location": "[resourceGroup().location]",
        "kind": "web",
        "tags": {
            "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('fullFunctionAppName'))]": "Resource"
        },        
        "properties": {
            "applicationId": "[variables('appInsightsName')]",
            "application_Type": "web"
        }
    },
    {
        "name": "[variables('fullStorageAccountName')]",
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2019-06-01",
        "tags": {
            "displayName": "[variables('fullStorageAccountName')]"
        },
        "location": "[resourceGroup().location]",
        "kind": "StorageV2",
        "sku": {
            "name": "Standard_LRS",
            "tier": "Standard"
        }
    },
    {
        "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
        "apiVersion": "2018-07-01",
        "name":"[concat(variables('fullStorageAccountName'), '/default/', variables('containerPrefix'), variables('supportedRegionArray')[copyIndex()])]",
        "dependsOn": [
            "[variables('fullStorageAccountName')]"
        ],
        "copy": {
            "name": "storageBlobCopy",
            "count": "[length(variables('supportedRegionArray'))]"
        }
    },
    {
        "name": "[variables('fullFunctionAppName')]",
        "type": "Microsoft.Web/sites",
        "apiVersion": "2018-11-01",
        "location": "[resourceGroup().location]",
        "identity": {
            "type": "SystemAssigned"
        },
        "kind": "functionapp",
        "dependsOn": [
            "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('fullStorageAccountName'))]"
        ],
        "properties": {     
            "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('fullHostingName'))]",
            "siteConfig": {
                "appSettings": [
                    {
                        "name": "AzureWebJobsDashboard",
                        "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('fullStorageAccountName'), ';AccountKey=', listKeys(variables('fullStorageAccountName'),'2015-05-01-preview').key1)]"
                    },
                    {
                        "name": "AzureWebJobsStorage",
                        "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('fullStorageAccountName'), ';AccountKey=', listKeys(variables('fullStorageAccountName'),'2015-05-01-preview').key1)]"
                    },
                    {
                        "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                        "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('fullStorageAccountName'), ';AccountKey=', listKeys(variables('fullStorageAccountName'),'2015-05-01-preview').key1)]"
                    },
                    {
                        "name": "WEBSITE_CONTENTSHARE",
                        "value": "[toLower(variables('fullFunctionAppName'))]"
                    },
                    {
                        "name": "FUNCTIONS_EXTENSION_VERSION",
                        "value": "~2"
                    },
                    {
                        "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                        "value": "[reference(resourceId('microsoft.insights/components/', variables('appInsightsName')), '2015-05-01').InstrumentationKey]"
                    },
                    {
                        "name": "FUNCTIONS_WORKER_RUNTIME",
                        "value": "dotnet"
                    },
                    {
                        "name": "[variables('configSkipKeyVaultName')]",
                        "value": "[parameters('isDebug')]"
                    },
                    {
                        "name": "[variables('configKeyVaultNameName')]",
                        "value": "[variables('fullKeyVaultName')]"
                    },
                    {
                        "name": "[variables('configBlobStorageConnectionStringName')]",
                        "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('fullStorageAccountName'), ';AccountKey=', listKeys(variables('fullStorageAccountName'),'2015-05-01-preview').key1)]"
                    },
                    {
                        "name": "[variables('configBlobStorageContainerPrefixName')]",
                        "value": "[variables('containerPrefix')]"
                    },
                    {
                        "name": "[variables('configDBConnectionStringName')]",
                        "value": "[concat('Server=tcp:',reference(variables('sqlServerName')).fullyQualifiedDomainName,',1433;Initial Catalog=',parameters('sqlDatabaseName'),';Persist Security Info=False;User ID=',parameters('sqlAdminLogin'),';Password=',parameters('sqlAdminPassword'),';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]"
                    },
                    {
                        "name": "[variables('configDeleteDBAfterBatchName')]",
                        "value": "[not(parameters('isDebug'))]"
                    },
                    {
                        "name": "[variables('configDisableDeviceVerificationName')]",
                        "value": "[parameters('isDebug')]"
                    },
                    {
                        "name": "[variables('configSigningKeyName')]",
                        "value": "asdf"
                    },
                    {
                        "name": "[variables('configSupportedRegionsNameName')]",
                        "value": "[parameters('supportedRegions')]"
                    }
                ]
            }
        }
    },
    {
        "name": "[variables('fullKeyVaultName')]",
        "type": "Microsoft.KeyVault/vaults",
        "apiVersion": "2016-10-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[variables('fullFunctionAppName')]"
        ],
        "properties": {
            "enabledForDeployment": true,
            "enabledForTemplateDeployment": true,
            "tenantId": "[subscription().tenantId]",
            "sku": {
                "name": "Standard",
                "family": "A"
            },
            "accessPolicies": [
                {
                    "objectId": "[reference(concat('Microsoft.Web/sites/', variables('fullFunctionAppName')), '2018-11-01', 'Full').identity.principalId]",
                    "tenantId": "[subscription().tenantId]",
                    "permissions": {
                        "secrets": [
                            "get","list","set"
                        ]
                    }
                }
            ]
        }
    },
    {
        "type": "Microsoft.KeyVault/vaults/secrets",
        "name": "[concat(variables('fullKeyVaultName'), '/', variables('configBlobStorageConnectionStringName'))]",
        "apiVersion": "2016-10-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[variables('fullKeyVaultName')]"
        ],
        "properties": {
            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('fullStorageAccountName'), ';AccountKey=', listKeys(variables('fullStorageAccountName'),'2015-05-01-preview').key1)]"
        }
    },
    {
        "type": "Microsoft.KeyVault/vaults/secrets",
        "name": "[concat(variables('fullKeyVaultName'), '/', variables('configDBConnectionStringName'))]",
        "apiVersion": "2016-10-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[variables('fullKeyVaultName')]"
        ],
        "properties": {
            "value": "[concat('Server=tcp:',reference(variables('sqlServerName')).fullyQualifiedDomainName,',1433;Initial Catalog=',parameters('sqlDatabaseName'),';Persist Security Info=False;User ID=',parameters('sqlAdminLogin'),';Password=',parameters('sqlAdminPassword'),';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]"
        }
    },
    {
        "type": "Microsoft.KeyVault/vaults/secrets",
        "name": "[concat(variables('fullKeyVaultName'), '/', variables('configSigningKeyName'))]",
        "apiVersion": "2016-10-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[variables('fullKeyVaultName')]"
        ],
        "properties": {
            "value": "asfd"
        }
    }
    ],
    "outputs": {}
}